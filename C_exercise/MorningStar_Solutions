1. 要確認特定bit是true or false要用哪個bitwise operator? (選擇題)
a 
a & (1 << 6)
00010


2. gcc的哪個flag會在compile的時候保留debug資訊？ (選擇題) 
Sol : -g


3.
- int
Sol : int a;

- pointer
Sol : int *b;

- 10 integer array
Sol : int c[10];

- pointer to array
Sol : 

- function pointer
- function pointer contains 10 pointers

4. #define SET_BIT (variable, bit)	//bit是要set、clear第幾個bit
   #define CLR_BIT (variable, bit)

5. 
#define MY_SIZEOF (variable)



6.
int a = 5, b = 6, c;
c = a+++b;
print a, b, c

Solutions : 
其實是undefine behavior 
不同的compiler  a+++b不一樣  GCC GNU 等
大部分是
a+++b =   (a++) + (b)
在a+b後再increment
5+6 = 11
11+1 = 12


7.
unsigned int A = -1;
int B = ~0;

if (A == B)
	printf("the same")
else
	printf("Not the same");


Solutions : 
int 長度 4byte = 32 bits signed
max_int 2^16=65536
~是反向 意思是  0->1  1->0
8位數 00000000  ~ FFFFFFFF
B = 00000000 - > 11111111
11111111 在C語言中是-1
因為在C語言中是用2的補數
所以A==B


8. 
void FOO (char* s)
{
	s = malloc(100);
	strcpy(s, "Bob");
}

char *a = "Alice";
char *name = a;

FOO(name);

printf("%s\n", name);

Sol :
因為是複製一份記憶體位置到S
所以原本的name沒有改
參考資料 : 
http://www.victorgau.com/?p=503



9. 解釋下列

const int a;
a的值不能更動

const int *p = &a;
p可改 a不能

int *p const = &a;
p不能改 a可

int const *a const;
p不能改 a不能改


10.  請問執行完後，j的值是多少?
int M(int i){
  static count = 0;
  count = count + i;
  return count;
}

int i, j;
for(int i=0 ; i<=4 ; ++i){
  j = M(i);
}

因為static的關係
第1次loop  count = 1
第2次loop  count = 2
第3次loop  count = 3
第4次loop  count = 4






口試題
1. process v.s. thread
2. mutex, semaphore，binary semaphore跟mutex差在哪
3. code section, data section放在memory的哪裡
4. stack v.s. heap, malloc分配的記憶體是哪一塊
5. static
6. race condition
7. muliti-thread怎麼做serialization, synchronization
8. process間可以怎麼互傳
9. Linux的user space跟system space如何溝通
10. 用你的話解釋OS在幹嘛
11. Deadlock條件
12. critical section在幹嘛
13. 對Linux的了解有多少
14. gcc的參數裡面加上-l代表link的意思，請問static library跟dynamic library的差異？
15. MACRO跟inline的差別?
16. MACRO的缺點?
17. 舉出race condition和deadlock的程式碼實例？   舉出來後，會問你該怎麼解決?
18. 甚麼情況會發生stack overflow?
19. 該怎麼解決stack overflow?
20. 請說明貝式理論?  甚麼情況會使P(x|y) = P(x)?
21. 已知有一變數int a = 10;    &a+1會發生甚麼事?  


Sol : 
1. process vs thread

https://hackpad.com/ep/pad/static/5TOjUJI2rKu

process 之間的address space並不相同，thread則共用相同的address space

Process : 已經背load到記憶體中了，隨時都有可能被CPU執行
一個多工的系統(multitasking system)可以同時運行多的process 每一個CPU一次只能做一件事情，如果process數目超過cpu個數
那就需要scheduling的技術 (FIFO,Round Robin等)
每個process間在記憶體中擺放的位置不好 會產生記憶體外部碎片 因此memory management是一個問題。

每個Process所需要的記憶體總合，也可能大於實體記憶體，因此需要另
         外用二次儲存裝置充當虛擬記憶體(Virtual Memory)，但是二次儲存裝置的速
         度肯定很慢，因此如何做到對虛擬記憶體最小的依賴，盡量避免Page Fault(電
         腦在主記憶體中找不到資料，而要去二次記憶體找，就稱為Page Fault)
         防止Thrashing的發生(因為Virtual Memory演算法不當，造成幾乎每次存取都要
         依賴二次記憶體，就是Thrashing)，以達到效能最佳化，也是個學問


Thread :
在同一個process底下，可以有許多的thread。以往process一次只能做一件事情
因此如果要一面聽音樂 一面查詢 就需要有multithread 
1個process底下可以有很多個thread 一個process的global variable可以讓所有的thread共享
所有的thread可存取共同的global value，也能有自己的local value
因為可以存取共同的值，有可能會有錯誤的情況發生，同部問題發生
這就是Synchronization問題 =>恐龍本第六章
         又，每一個Thread之間可能會互搶資源，而造成死結(Deadlock)，只要以下四
         個條件都滿足就有死結。(1)這個資源不能同時給兩個人用 (2)有一個人拿了一
         個資源，又想拿別人的資源 (3)如果一個人占了茅坑不拉屎，占用資源很久，仍
         不能趕他走 (4)A等B，B等C，C等D，D又等A 等成一圈

mutuex  semaphore 的作用

12.
臨界區段（Critical section）指的是一個存取共用資源（例如：共用裝置或是共用記憶體）的程式片段，而這些共用資源有無法同時被多個執行緒存取的特性。


14. gcc的參數裡面加上-l代表link的意思，請問static library跟dynamic library的差異？

靜態函式庫是把整個Library包進去執行檔，因此可以保證到不同機器環境下執行，也不會因為少了這個函式庫導致無法執行檔案，但其缺點是檔案會比較大，假如大部分檔案都需要用到相同的函式庫，但全部都使用靜態連結的方式，那這樣非常的佔空間資源

動態連結函式庫的好處，就是可以讓多個執行檔案，同時連結使用，可以減少佔空間，但是卻容易發生如果Library的版本不同，會導致連結執行錯誤。
使用動態連結機制時，函式庫可以先不需要被連結進來，而是在需要的時候才透過動態連結器 (Dynamic Linker) 尋找並連結函式庫，這種方式可以不用載入全部的程式，因此可以節省記憶體。當很多執行中的程式共用到函式庫時，動態連結所節省的記憶體數量就相當可觀。


白板題
1. 寫一個swap？傳變數進swap時是call by value還是call by reference？

2. #define SUM(A, B) A+B
   SUM(1,2)*3 = ?
   Why? And How to correct the macro?


3. 真值表(AND, OR, XOR)

4. deadlock

5. ++a, a++

6. 寫linked list